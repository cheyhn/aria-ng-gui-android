name: Build and Release Android APK

on:
  push:
    tags:  # 只在推送标签时触发（例如 v1.0.0）
      - 'v*'  # 匹配 v 开头的标签，如 v1.0.0、v2.1.1

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 14

      - name: Install dependencies
        run: |
          npm install
          npm install -g cordova

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Prepare Cordova environment
        run: |
          chmod +x tools/init.sh
          ./tools/init.sh

      - name: Build APK
        run: |
          npm run buildApk

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub自动提供的令牌，无需手动配置
        with:
          tag_name: ${{ github.ref }}  # 使用触发工作流的标签（如 v1.0.0）
          release_name: Release ${{ github.ref_name }}  # 发布名称（如 Release v1.0.0）
          draft: false  # 不设为草稿
          prerelease: false  # 不设为预发布

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}  # 从创建发布步骤获取上传URL
          asset_path: platforms/android/app/build/outputs/apk/release/app-release.apk  # APK路径（需与实际编译输出一致）
          asset_name: aria-ng-gui-${{ github.ref_name }}.apk  # 发布中显示的文件名（如 aria-ng-gui-v1.0.0.apk）
          asset_content_type: application/vnd.android.package-archive  # APK的MIME类型
