name: 手动构建（参考Azure历史配置）

on:
  workflow_dispatch:  # 保持手动触发，如需自动触发可添加push: {branches: [master]}

jobs:
  build:
    runs-on: ubuntu-20.04  # 匹配2021年主流环境
    permissions:
      contents: write

    steps:
      - name: 拉取代码
        uses: actions/checkout@v2

      - name: 安装Java 8（Azure同期常用版本）
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: 安装Android SDK（适配v1.3.x版本）
        uses: android-actions/setup-android@v2
        with:
          android-sdk-version: 29  # 2021年构建常用版本
          build-tools-version: 29.0.3

      - name: 安装Node.js（匹配2021年依赖）
        uses: actions/setup-node@v2
        with:
          node-version: '14'  # v1.3.x版本开发时的主流Node版本

      - name: 安装Cordova（参考Azure降级记录）
        run: |
          npm install -g cordova@10  # 与v1.3.x时期cordova-android版本匹配
          cordova --version

      - name: 安装依赖（处理权限相关依赖）
        run: |
          # 解决存储空间权限问题（参考v1.1.1修复）
          npm install --legacy-peer-deps
          cd www && npm install --legacy-peer-deps && cd ..

      - name: 配置Android权限（显式声明，参考v1.1.1）
        run: |
          # 在config.xml中添加存储权限（Android 6.0+需要）
          sed -i '/<platform name="android">/a <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />' config.xml
          sed -i '/<platform name="android">/a <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />' config.xml

      - name: 生成时间版本号（兼容格式）
        run: |
          VERSION=$(date +%Y.%m.%d.%H.%M)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "TAG=v$VERSION" >> $GITHUB_ENV

      - name: 更新配置文件版本
        run: |
          sed -i "s/version=\".*\"/version=\"${{ env.VERSION }}\"/g" config.xml
          sed -i "s/\"version\": \".*\"/\"version\": \"${{ env.VERSION }}\"/g" package.json

      - name: 构建APK（支持暗色模式等功能，参考v1.3.0）
        run: |
          cordova platform add android@9  # 匹配v1.3.x的cordova-android版本
          cordova build android --release --no-sign  # 跳过签名，避免密钥问题

      - name: 重命名并发布
        run: |
          mkdir -p output
          cp platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk output/aria-ng-gui-${{ env.VERSION }}.apk

      - name: 创建GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG }}
          files: output/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
